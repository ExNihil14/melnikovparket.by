{"version":3,"sources":["js/parallax.js"],"names":["$","fn","parallax","window_width","window","width","each","i","$this","addClass","updateParallax","initial","container_height","height","children","$img","first","img_height","parallax_dist","bottom","offset","top","scrollTop","windowHeight","innerHeight","windowBottom","percentScrolled","Math","round","css","one","complete","trigger","scroll","resize","jQuery"],"mappings":";;AAAC,WAAUA,CAAV,EAAa;;AAEZA,IAAEC,EAAF,CAAKC,QAAL,GAAgB,YAAY;AAC1B,QAAIC,eAAeH,EAAEI,MAAF,EAAUC,KAAV,EAAnB;AACA;AACA,WAAO,KAAKC,IAAL,CAAU,UAASC,CAAT,EAAY;AAC3B,UAAIC,QAAQR,EAAE,IAAF,CAAZ;AACAQ,YAAMC,QAAN,CAAe,UAAf;;AAEA,eAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,YAAIC,gBAAJ;AACA,YAAIT,eAAe,GAAnB,EAAwB;AACtBS,6BAAoBJ,MAAMK,MAAN,KAAiB,CAAlB,GAAuBL,MAAMK,MAAN,EAAvB,GAAwCL,MAAMM,QAAN,CAAe,KAAf,EAAsBD,MAAtB,EAA3D;AACD,SAFD,MAGK;AACHD,6BAAoBJ,MAAMK,MAAN,KAAiB,CAAlB,GAAuBL,MAAMK,MAAN,EAAvB,GAAwC,GAA3D;AACD;AACD,YAAIE,OAAOP,MAAMM,QAAN,CAAe,KAAf,EAAsBE,KAAtB,EAAX;AACA,YAAIC,aAAaF,KAAKF,MAAL,EAAjB;AACA,YAAIK,gBAAgBD,aAAaL,gBAAjC;AACA,YAAIO,SAASX,MAAMY,MAAN,GAAeC,GAAf,GAAqBT,gBAAlC;AACA,YAAIS,MAAMb,MAAMY,MAAN,GAAeC,GAAzB;AACA,YAAIC,YAAYtB,EAAEI,MAAF,EAAUkB,SAAV,EAAhB;AACA,YAAIC,eAAenB,OAAOoB,WAA1B;AACA,YAAIC,eAAeH,YAAYC,YAA/B;AACA,YAAIG,kBAAkB,CAACD,eAAeJ,GAAhB,KAAwBT,mBAAmBW,YAA3C,CAAtB;AACA,YAAIrB,WAAWyB,KAAKC,KAAL,CAAYV,gBAAgBQ,eAA5B,CAAf;;AAEA,YAAIf,OAAJ,EAAa;AACXI,eAAKc,GAAL,CAAS,SAAT,EAAoB,OAApB;AACD;AACD,YAAKV,SAASG,SAAV,IAAyBD,MAAOC,YAAYC,YAAhD,EAAgE;AAC9DR,eAAKc,GAAL,CAAS,WAAT,EAAsB,sBAAsB3B,QAAtB,GAAiC,QAAvD;AACD;AAEF;;AAED;AACAM,YAAMM,QAAN,CAAe,KAAf,EAAsBgB,GAAtB,CAA0B,MAA1B,EAAkC,YAAW;AAC3CpB,uBAAe,IAAf;AACD,OAFD,EAEGJ,IAFH,CAEQ,YAAW;AACjB,YAAI,KAAKyB,QAAT,EAAmB/B,EAAE,IAAF,EAAQgC,OAAR,CAAgB,MAAhB;AACpB,OAJD;;AAMAhC,QAAEI,MAAF,EAAU6B,MAAV,CAAiB,YAAW;AAC1B9B,uBAAeH,EAAEI,MAAF,EAAUC,KAAV,EAAf;AACAK,uBAAe,KAAf;AACD,OAHD;;AAKAV,QAAEI,MAAF,EAAU8B,MAAV,CAAiB,YAAW;AAC1B/B,uBAAeH,EAAEI,MAAF,EAAUC,KAAV,EAAf;AACAK,uBAAe,KAAf;AACD,OAHD;AAKD,KAjDM,CAAP;AAmDD,GAtDD;AAuDD,CAzDA,EAyDEyB,MAzDF,CAAD","file":"parallax.js","sourcesContent":["(function ($) {\n\n  $.fn.parallax = function () {\n    var window_width = $(window).width();\n    // Parallax Scripts\n    return this.each(function(i) {\n      var $this = $(this);\n      $this.addClass('parallax');\n\n      function updateParallax(initial) {\n        var container_height;\n        if (window_width < 601) {\n          container_height = ($this.height() > 0) ? $this.height() : $this.children(\"img\").height();\n        }\n        else {\n          container_height = ($this.height() > 0) ? $this.height() : 500;\n        }\n        var $img = $this.children(\"img\").first();\n        var img_height = $img.height();\n        var parallax_dist = img_height - container_height;\n        var bottom = $this.offset().top + container_height;\n        var top = $this.offset().top;\n        var scrollTop = $(window).scrollTop();\n        var windowHeight = window.innerHeight;\n        var windowBottom = scrollTop + windowHeight;\n        var percentScrolled = (windowBottom - top) / (container_height + windowHeight);\n        var parallax = Math.round((parallax_dist * percentScrolled));\n\n        if (initial) {\n          $img.css('display', 'block');\n        }\n        if ((bottom > scrollTop) && (top < (scrollTop + windowHeight))) {\n          $img.css('transform', \"translate3D(-50%,\" + parallax + \"px, 0)\");\n        }\n\n      }\n\n      // Wait for image load\n      $this.children(\"img\").one(\"load\", function() {\n        updateParallax(true);\n      }).each(function() {\n        if (this.complete) $(this).trigger(\"load\");\n      });\n\n      $(window).scroll(function() {\n        window_width = $(window).width();\n        updateParallax(false);\n      });\n\n      $(window).resize(function() {\n        window_width = $(window).width();\n        updateParallax(false);\n      });\n\n    });\n\n  };\n}( jQuery ));\n"]}