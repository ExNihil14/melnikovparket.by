{"version":3,"sources":["js/jquery.hammer.js"],"names":["factory","define","amd","exports","require","jQuery","Hammer","$","hammerify","el","options","$el","data","fn","hammer","each","Manager","prototype","emit","originalEmit","type","call","element","trigger","gesture"],"mappings":";;;;AAAC,WAASA,OAAT,EAAkB;AACf,QAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgCA,OAAOC,GAA3C,EAAgD;AAC5CD,eAAO,CAAC,QAAD,EAAW,UAAX,CAAP,EAA+BD,OAA/B;AACH,KAFD,MAEO,IAAI,QAAOG,OAAP,yCAAOA,OAAP,OAAmB,QAAvB,EAAiC;AACpCH,gBAAQI,QAAQ,QAAR,CAAR,EAA2BA,QAAQ,UAAR,CAA3B;AACH,KAFM,MAEA;AACHJ,gBAAQK,MAAR,EAAgBC,MAAhB;AACH;AACJ,CARA,EAQC,UAASC,CAAT,EAAYD,MAAZ,EAAoB;AAClB,aAASE,SAAT,CAAmBC,EAAnB,EAAuBC,OAAvB,EAAgC;AAC5B,YAAIC,MAAMJ,EAAEE,EAAF,CAAV;AACA,YAAG,CAACE,IAAIC,IAAJ,CAAS,QAAT,CAAJ,EAAwB;AACpBD,gBAAIC,IAAJ,CAAS,QAAT,EAAmB,IAAIN,MAAJ,CAAWK,IAAI,CAAJ,CAAX,EAAmBD,OAAnB,CAAnB;AACH;AACJ;;AAEDH,MAAEM,EAAF,CAAKC,MAAL,GAAc,UAASJ,OAAT,EAAkB;AAC5B,eAAO,KAAKK,IAAL,CAAU,YAAW;AACxBP,sBAAU,IAAV,EAAgBE,OAAhB;AACH,SAFM,CAAP;AAGH,KAJD;;AAMA;AACAJ,WAAOU,OAAP,CAAeC,SAAf,CAAyBC,IAAzB,GAAiC,UAASC,YAAT,EAAuB;AACpD,eAAO,UAASC,IAAT,EAAeR,IAAf,EAAqB;AACxBO,yBAAaE,IAAb,CAAkB,IAAlB,EAAwBD,IAAxB,EAA8BR,IAA9B;AACAL,cAAE,KAAKe,OAAP,EAAgBC,OAAhB,CAAwB;AACpBH,sBAAMA,IADc;AAEpBI,yBAASZ;AAFW,aAAxB;AAIH,SAND;AAOH,KAR+B,CAQ7BN,OAAOU,OAAP,CAAeC,SAAf,CAAyBC,IARI,CAAhC;AASH,CAhCA,CAAD","file":"jquery.hammer.js","sourcesContent":["(function(factory) {\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery', 'hammerjs'], factory);\n    } else if (typeof exports === 'object') {\n        factory(require('jquery'), require('hammerjs'));\n    } else {\n        factory(jQuery, Hammer);\n    }\n}(function($, Hammer) {\n    function hammerify(el, options) {\n        var $el = $(el);\n        if(!$el.data(\"hammer\")) {\n            $el.data(\"hammer\", new Hammer($el[0], options));\n        }\n    }\n\n    $.fn.hammer = function(options) {\n        return this.each(function() {\n            hammerify(this, options);\n        });\n    };\n\n    // extend the emit method to also trigger jQuery events\n    Hammer.Manager.prototype.emit = (function(originalEmit) {\n        return function(type, data) {\n            originalEmit.call(this, type, data);\n            $(this.element).trigger({\n                type: type,\n                gesture: data\n            });\n        };\n    })(Hammer.Manager.prototype.emit);\n}));\n"]}